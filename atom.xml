<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>熊海燕的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-27T05:51:03.245Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue+elementUI实战之网易云音乐--半月总结！！！</title>
    <link href="http://yoursite.com/2020/05/27/vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    <id>http://yoursite.com/2020/05/27/vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/</id>
    <published>2020-05-27T04:33:17.000Z</published>
    <updated>2020-05-27T05:51:03.245Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="模仿网易云音乐pc端"   >          <a href="#模仿网易云音乐pc端" class="heading-link"><i class="undefined"></i></a>模仿网易云音乐pc端</h1>      <p>先写写心得体会吧，经过半个月，我实现了网易云音乐的一些功能。最开始的时候，我记得我几乎写点东西，就会去看我学vue的笔记，（笔记真的好有用，什么忘记了，就拿出来看看，不懂的再百度）。我觉得这半个月最难的就是，音乐播放部分了，终于昨天晚上，我成功的实现了音乐自动播放下一首，点击按钮切换上一首，下一首，我真的好开心，哈哈哈哈哈哈。不过，项目中出现过很多问题，我要一点点的总结下来，<a href="https://github.com/xhysah/xhymusic" target="_blank" rel="noopener">项目地址</a>.</p>        <h2 id="项目搭建"   >          <a href="#项目搭建" class="heading-link"><i class="undefined"></i></a>项目搭建</h2>      <ul><li>        <h3 id="基本项目"   >          <a href="#基本项目" class="heading-link"><i class="undefined"></i></a>基本项目</h3>      <p>   <strong>安装脚手架</strong>：npm install -g  @vue/cli</p><pre><code>**创建一个新项目**： vue create my-project(自己想取的项目名称)</code></pre><p>   1.Please pick a preset？(选择手动的，可以自己想要的配置)——-manully<br>   2.Check the features needed for your project(询问项目需求)：我选择的如下图<br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E9%A1%B9%E7%9B%AE.png" alt=""></p><ol start="2"><li>Use history mode for router(路由模式是否使用history)? ——-yes  </li><li>Pick a CSS pre-processor(询问项目的css预处理器)：——–Stylus   </li><li>Pick a linter / formatter config(询问项目的格式校验方式)：——Standard  </li><li>Pick additional lint features:(询问项目是什么时候校验格式)——lint on save(保存时就校验，哈哈哈哈，因为我不知道怎么写代码是规范的，需要他实时约束我)  </li><li>Where do you prefer placing config for Babel, ESLint, etc.?（询问项目的配置文件放在那里）—–In dedicated config files  </li><li>Save this as a preset for future projects? (是否保存该配置，若是，你以后创建新项目的时候，就会看见这个配置)—-no<br>然后vue-cli就开始自己下载了，等待他<br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE.png" alt=""><ul><li>        <h3 id="引入项目中使用的东西——axios，element-Ul"   >          <a href="#引入项目中使用的东西——axios，element-Ul" class="heading-link"><i class="undefined"></i></a>引入项目中使用的东西——axios，element-Ul</h3>      </li></ul><strong>1.axios</strong><br>下载npm install axios –save，运行时也会使用，所有要保存在你的运行时依赖中<br>在src/main.js中：导入import axios from ‘axios’，<br>挂载到vue原型上Vue.prototype.$http = axios—-使用的时候，就可以this.$http<br>全局配置axios.defaults.baseURL = ‘<a href="http://192.168.1.5:3000&#39;">http://192.168.1.5:3000&#39;</a><br>axios.defaults.withCredentials = true 表示跨域请求时是否需要使用凭证<br><strong>2.element-UI</strong><br>下载npm i element-ui -save<br>我是在src下面建了一个elementUI文件夹，再建了一个element.js文件<br>在这个文件中，按需引入elementUI<figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import &#123;</span><br><span class="line">  Form,</span><br><span class="line">FormItem</span><br><span class="line"> &#125;from &#39;element-ui&#39;;</span><br><span class="line"> Vue.use(Form)</span><br><span class="line"> Vue.use(FormItem)</span><br></pre></td></tr></table></div></figure>再在main.js中引入import ‘./elementUi/element’<br>最后删掉views，components里面原本存在的vue文件，连同src/router/index.js里的路由一起删掉—-然后做完这些，我就开始研究文档了，一开始真的好难上手<br><a href="https://github.com/Binaryify/NeteaseCloudMusicApi" target="_blank" rel="noopener">网易云github地址</a>.<br>下载后 node app.js 就可以了        <h2 id="遇到的问题"   >          <a href="#遇到的问题" class="heading-link"><i class="undefined"></i></a>遇到的问题</h2>      <ul><li>        <h3 id="播放音乐"   >          <a href="#播放音乐" class="heading-link"><i class="undefined"></i></a>播放音乐</h3>      最开始的时候，我知道肯定会用audio标签，建立了一个musicPlayer组件，然后把它固定在浏览器底部，因为有好几个页面都有音乐播放，所以我只能把音乐数据放在vuex里面统一管理，传给vuex的值都是可用数据了，每次只能播放一首歌，播放完后，就直接停止了，我应该在他的ended事件里面做些什么。逻辑是这样的<br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt=""><br>大概吧，我真的不知道怎么表述了，反正数据，我都存在vuex里面了，<br>总结：</li></ul></li></ol></li><li><p>1.在actions里面可以调用mutation——–context.commit(‘事件类型’,’参数’)，网络请求等异步操作，放在actions里面————组件调用this.$store.dispatch(‘事件类型’, ‘参数’)</p></li><li><p>2.mutations——组件调用this$store.commit(‘事件类型’,’参数’)–vuex的store状态的更新唯一方式，注意不能在actions里直接修改state里的值，改是可以改的，不提倡，容易出问题</p></li><li>        <h3 id="路由跳转"   >          <a href="#路由跳转" class="heading-link"><i class="undefined"></i></a>路由跳转</h3>      <p>问题：elementui中的导航菜单，自带的:default-active=”activeIndex”，他只有点击才有对应的效果，你要是选择了第二项，然后刷新，他就会自动跳到第一个上面，整个导航菜单就会乱掉</p></li><li><p>我把首页里的activeName值保存在vuex中，同时也从vuex中取值，每次跳转时，都会在生命周期created里面提交修改activeName的值，路由就不会乱掉了</p></li><li>        <h3 id="flex布局"   >          <a href="#flex布局" class="heading-link"><i class="undefined"></i></a>flex布局</h3>      <p>在项目中，我经常遇到布局问题，因为好多图片，都要居中对齐，看起来整洁一点，总结一下经常用的</p></li><li><p>容器的justify-content属性，属性值space-between两端项目之间的距离都相等，center居中对齐</p></li><li><p>容器的flex-warp—-定义一行排不下item，如何换行—-wrap换行</p></li><li><p>容器属性<br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E5%AE%B9%E5%99%A8%E5%B1%9E%E6%80%A7.png" alt=""></p><ul><li><p>项目属性<br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E9%A1%B9%E7%9B%AE%E5%B1%9E%E6%80%A7.png" alt=""></p></li><li>        <h3 id="定位"   >          <a href="#定位" class="heading-link"><i class="undefined"></i></a>定位</h3>      <p>relative：相对定位，不脱离文档流，参考自身的静态位置<br>absolute：绝对定位，参考最近一个不为static的父级元素的位置<br>fixed：固定定位，参照对象为可视窗口<br>static ：默认，按照正常流进行排列</p></li><li>        <h3 id="修饰符sync"   >          <a href="#修饰符sync" class="heading-link"><i class="undefined"></i></a>修饰符sync</h3>      <p>在我使用elementUI时，我发现经常有数据，会加上这个修饰符.sync,一直不明白是什么意思</p></li><li><p>其实sync是一个语法糖，是什么语法糖呢？</p></li><li><p>在子组件中不能修改父组件中的值，要想修改父组件中的值，必须向父组件发射一个方法this.$emit(‘方法名’,‘修改的的值);，然后父组件接收这个方法@方法名=‘处理数据操作’</p></li><li><p>如果使用.sync,就不用上面操作了，在子组件中修改的值，父组件也会同步变化</p>        <h2 id="项目截图"   >          <a href="#项目截图" class="heading-link"><i class="undefined"></i></a>项目截图</h2>      <p><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E9%A6%96%E9%A1%B5.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%88%91%E7%9A%84%E9%9F%B3%E4%B9%90.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%8E%92%E8%A1%8C%E6%A6%9C.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%AD%8C%E5%8D%95.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%AD%8C%E5%8D%95%E6%AD%8C%E6%9B%B2.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%AD%8C%E6%89%8B.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E6%AD%8C%E6%89%8B%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/mv%E6%92%AD%E6%94%BE.png" alt=""><br><img src="vue-elementUI%E5%AE%9E%E6%88%98%E4%B9%8B%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-%E5%8D%8A%E6%9C%88%E6%80%BB%E7%BB%93%EF%BC%81%EF%BC%81%EF%BC%81/imgs/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE.png" alt=""></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        &lt;h1 id=&quot;模仿网易云音乐pc端&quot;   &gt;
          &lt;a href=&quot;#模仿网易云音乐pc端&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;undefined&quot;&gt;&lt;/i&gt;&lt;/a&gt;模仿网易云音乐pc端&lt;/h1&gt;
      &lt;p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
